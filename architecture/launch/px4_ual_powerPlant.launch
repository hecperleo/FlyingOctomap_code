<launch>

    
    <arg name="multi" default="false"/>
    <arg name="ns_prefix" default="uav_"/>
    <arg name="mode" default="sitl"/>
    <arg name="pose_frame_id" default=""/>
    <!-- To publish ual/pose in other frame than local, e.g. map -->
    <arg name="ual_server" default="on"/>
    <arg name="ual_pub_rate" default="30.0"/>
    <arg name="mavros_offboard_rate" default="30.0"/>
    <arg name="save_test_data" default="false"/>
    <arg name="pub_rate" default="50.0"/>
    <arg name="robot_model" default="iris_hokuyo"/>
    <arg name="save_experiment_data" default="false"/>
    <arg name="trajectory" default="false"/>


    <rosparam file="$(find architecture)/cfg/powerPlant_params.yaml" command="load" />
    <!-- #########################  Robot  ######################################### -->
    <param name="robot_description" command="$(eval 'xacro --inorder ' + find('robots_description') + '/models/iris_hokuyo/model.xacro')"/>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher"/>
    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_uav1_baselink" args="0 0 0 0 0 0 1 uav_1 base_link" /> -->

    <group if="$(eval mode=='sitl')">
        <!-- Launch Gazebo simulation -->
        <rosparam param="/use_sim_time">true</rosparam>
        <node pkg="px4_bringup" type="launch_gzworld.py" name="gazebo_world" output="screen" args="-physics=ode -world=$(find architecture)/worlds/power_plant/power_plant.world">
        </node>
    </group>
    
    <include file="$(find px4_bringup)/launch/spawn_robot.launch" ns="$(arg ns_prefix)1">
        <arg name="id" value="1"/>
        <arg name="material" value="Blue"/>
        <arg name="mode" value="$(arg mode)"/>
        <arg name="x" value="0"/>
        <arg name="y" value="0"/>
        <arg name="z" value="0"/>
        <arg name="yaw" value="0"/>
        <arg name="robot_model" value="$(arg robot_model)"/>
    </include>

    <!-- #########################  UAL  ######################################### -->
    <node pkg="uav_abstraction_layer" type="server" name="ual" ns="$(arg ns_prefix)1" output="screen">
        <param name="uav_id" value="1"/>
        <param name="pose_frame_id" value="$(arg pose_frame_id)"/>
        <param name="ual_server" value="$(arg ual_server)"/>
        <param name="ual_pub_rate" value="$(arg ual_pub_rate)"/>
        <param name="mavros_offboard_rate" value="$(arg mavros_offboard_rate)"/>
        <param name="home_pose_parent_frame" value="map"/>
        <!-- Define home pose relative to global map frame -->
        <rosparam param="home_pose">[0, 0, 0]</rosparam>  
    </node>
    

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find architecture)/rviz_configurations/exploration_ltstarPaths.rviz" />
    
</launch>